# 
# !!! Load script generated by nmk-base plugin, don't edit !!!
#

__checkSysDeps() {
    local cmd="${1}"
    local url="${2}"
    
    # Command found?
    echo -n "Check ${cmd} "
    if test -z "$(which "${cmd}" 2>/dev/null || true)"; then
        echo "[missing]"
        echo "Please install from ${url}"
        MISSING_DEPS=1
    else
        echo "[OK]"
    fi
}

# Check system dependencies
MISSING_DEPS=0
__checkSysDeps git "https://git-scm.com/downloads"
__checkSysDeps python "https://www.python.org/downloads/"

# Stop if something is missing
if test ${MISSING_DEPS} -ne 0; then
    return 1
fi

# Create venv if not done yet
if test ! -d venv; then
    # Create it
    echo Create venv...
    python -m venv venv

    # Load it
    source venv/Scripts/activate
    
    # Bootstrap it
    python -m pip install pip wheel --upgrade

    # Install requirements (if present)
    if test -f "requirements.txt"; then
        pip install -r requirements.txt 
    else
        # Default: only install nmk
        pip install nmk
    fi

    # Patch it for nmk completion
    # On git bash, handle completion through temporary files rather than descriptors
    # see https://github.com/kislyuk/argcomplete#git-bash-support
    echo ' ' >> venv/Scripts/activate
    echo 'export ARGCOMPLETE_USE_TEMPFILES=1' >> venv/Scripts/activate
    echo 'eval "$(register-python-argcomplete nmk)"' >> venv/Scripts/activate
fi

# Finally load venv
echo Load venv
source venv/Scripts/activate

# Clean useless stuff from terminal context
unset __checkSysDeps

# Run command specified as parameter, if any
"$@"
